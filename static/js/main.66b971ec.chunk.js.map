{"version":3,"sources":["hocs/withAuthRedirect.js","components/common/img/userIcon.png","redux/users/usersActions.js","redux/users/usersThunks.js","components/Profile/MyPosts/Post/Post.module.css","components/common/img/loading.gif","components/Users/Users.module.css","components/Login/Login.module.css","api/API.js","components/Navbar/Navbar.module.css","components/common/Preloader/Preloader.jsx","serviceWorker.js","hocs/withLazyLoading.js","components/Header/Header.jsx","redux/app/authActions.js","redux/auth/authThunks.js","components/Header/HeaderContainer.js","components/Navbar/Navbar.jsx","redux/profile/profileActions.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","redux/profile/profileThunks.js","hocs/withProfileRedirect.js","components/Profile/ProfileContainer.jsx","components/common/Paginator/Paginator.js","components/Users/Users.jsx","redux/users/usersSelectors.js","components/Users/UsersContainer.js","components/Login/Login.jsx","components/Login/LoginContainer.js","redux/app/appThunks.js","redux/app/appActions.js","App.js","redux/profile/profileReducer.js","redux/dialogs/dialogsReducer.js","redux/auth/authReducer.js","redux/users/usersReducer.js","redux/app/appReducer.js","redux/reduxStore.js","index.js","utills/validators/validators.js","components/common/FormsControlls/FormsControls.js","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControlls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/Paginator/Paginator.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","isAuthReady","isReady","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","setUsers","users","type","setTotalUsersCount","totalUsersCount","setCurrentPage","newPage","setIsFetching","isFetching","setFollowingInProgress","userId","requestUsers","page","pageSize","dispatch","usersActions","usersAPI","getUsers","then","data","items","totalCount","onPageChanged","pageNumber","follow","resp","resultCode","unfollow","instance","axios","withCredentials","baseURL","headers","get","response","post","delete","authAPI","getAuth","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","Preloader","style","backgroundColor","src","preloader","Boolean","window","location","hostname","match","Header","className","s","header","alt","loginBlock","userLogin","onClick","setUserData","payload","setIsAuth","a","id","authActions","message","messages","length","action","stopSubmit","_error","HeaderContainer","bindActionCreators","authThunks","Navbar","nav","item","activeClassName","active","addPost","text","setUserProfile","profile","setStatus","Post","dialog","likes","MyPosts","memo","postsBlock","MyPostsReduxForm","onSubmit","values","newPostText","posts","map","key","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","requiredField","MyPostsContainer","profilePage","newPostState","profileActions","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","content","descriptionBlock","photos","large","Profile","ProfileContainer","params","ProfileContainerComponent","compose","profileThunks","withRouter","Paginator","totalItemsCount","currentPage","step","bigStep","pagesCount","Math","ceil","pages","i","push","getLeftPageNumber","someStep","getRightPageNumber","leftPageNumber","rightPageNumber","leftPageNumberToButton","rightPageNumberToButton","filter","p","cn","Users","u","small","userPhoto","followed","disabled","followingInProgress","some","getIsFetching","usersPage","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","UsersContainer","userThunks","maxLength30","LoginReduxForm","Input","error","formSummaryError","Login","formData","initializeApp","authPrommise","Promise","all","Dialogs","lazy","fallback","App","initialized","path","render","store","app","appThunks","initialState","profileReducer","newPost","stateCopy","dialogs","dialogsReducer","messageBody","usersReducer","appReducer","reducers","combineReducers","authReducer","dialogsPage","formReducer","createStore","applyMiddleware","thunk","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","maxLength","FormControll","input","meta","hasError","touched","formControl","children","restProps","child"],"mappings":"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","file":"static/js/main.66b971ec.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isAuthReady:state.auth.isReady\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n/*            if(!this.props.isAuthReady) return <Preloader/>*/\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/userIcon.bf20bb7c.png\";","export const follow = (userId) => {\r\n    return{\r\n        type:'FOLLOW',\r\n        userId:userId\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId:userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return{\r\n        type: 'SET_USERS',\r\n        users:users\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount)=> {\r\n    return{\r\n        type:'SET_TOTAL_USERS_COUNT',\r\n        totalUsersCount:totalUsersCount\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (newPage)=> {\r\n    return {\r\n        type:'SET_CURRENT_PAGE',\r\n        newPage:newPage\r\n    }\r\n}\r\n\r\nexport const setIsFetching = (isFetching) => {\r\n    return{\r\n        type:'SET_IS_FETCHING',\r\n        isFetching:isFetching\r\n    }\r\n}\r\n\r\nexport const setFollowingInProgress = (userId,isFetching) => {\r\n    return {\r\n        type:'SET_FOLLOWING_IN_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\n","import {usersAPI} from \"../../api/API\";\r\nimport * as usersActions from \"./usersActions\";\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(usersActions.setIsFetching(true));\r\n        dispatch(usersActions.setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(usersActions.setUsers(data.items));\r\n            dispatch(usersActions.setTotalUsersCount(data.totalCount));\r\n            dispatch(usersActions.setIsFetching(false));\r\n        });\r\n    }\r\n}\r\n\r\nexport const onPageChanged = (pageNumber, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(usersActions.setIsFetching(true))\r\n        usersAPI.getUsers(pageNumber,pageSize).then(data => {\r\n            dispatch(usersActions.setUsers(data.items))\r\n            dispatch(usersActions.setTotalUsersCount(data.totalCount))\r\n            dispatch(usersActions.setIsFetching(false))\r\n        });\r\n        dispatch(usersActions.setCurrentPage(pageNumber))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(usersActions.setFollowingInProgress(userId,true))\r\n        usersAPI.follow(userId)\r\n            .then(resp => {\r\n                if (resp.data.resultCode == 0) { dispatch(usersActions.follow(userId))}\r\n                dispatch(usersActions.setFollowingInProgress(userId,false))\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(usersActions.setFollowingInProgress(userId,true));\r\n        usersAPI.unfollow(userId)\r\n            .then(resp => {\r\n                if (resp.data.resultCode == 0) { dispatch(usersActions.unfollow(userId)) }\r\n                dispatch(usersActions.setFollowingInProgress(userId,false))\r\n            });\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__-uyVO\",\"dialog\":\"Post_dialog__2Z43o\"};","module.exports = __webpack_public_path__ + \"static/media/loading.0c6f34a3.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2UFxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__33cld\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": '9aa1de84-d3f1-471f-9bd9-d1966c0d5772'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (pageNumber, pageSize) => {\r\n        return instance\r\n            .get(`users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow: (userId) => {\r\n        return instance\r\n            .post(`follow/${userId}`);\r\n    },\r\n    unfollow: (userId) => {\r\n        return instance\r\n            .delete(`follow/${userId}`);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth: () => {\r\n        return instance\r\n            .get('auth/me');\r\n    },\r\n    login: (email,password,rememberMe = false) => {\r\n      return instance\r\n          .post(`auth/login`, {email,password,rememberMe});\r\n    },\r\n    logout: () => {\r\n        return instance\r\n            .delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) => {\r\n        return instance\r\n            .get(`profile/${userId}`)\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance\r\n            .get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance\r\n            .put(`profile/status/`, {status:status})\r\n    }\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2agd2\",\"item\":\"Navbar_item__1at7_\",\"active\":\"Navbar_active__1nkSF\"};","import preloader from \"../img/loading.gif\"\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return <div style={{backgroundColor: 'white'}}>\r\n    <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\nexport const withLazyLoading = (Component) => (props) => {\r\n    return <Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props}/>\r\n    </Suspense>\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://v.od.ua/uploads/92/logo.png\"  alt='picture not found'/>\r\n        <div className={s.loginBlock}>\r\n          {\r\n            props.isAuth\r\n                ? <div>{props.userLogin} - <button onClick={props.logout}>Logout</button></div> :\r\n                <NavLink to='/login'>Login</NavLink>\r\n          }\r\n            </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","export const setUserData = (userId, email, login) => {\r\n    return {\r\n        type: 'SET_USER_DATA',\r\n        payload: {userId, email, login}\r\n    }\r\n}\r\nexport const setIsAuth = (isAuth) => {\r\n    return {\r\n        type: 'SET_IS_AUTH',\r\n        isAuth: isAuth\r\n    }\r\n}\r\n\r\nexport const setIsReady = (isReady) => {\r\n    return {\r\n        type: 'SET_IS_READY',\r\n        isReady:isReady\r\n    }\r\n}","import {authAPI} from \"../../api/API\";\r\nimport * as authActions from '../app/authActions'\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport const getAuth = () => async (dispatch) => {\r\n    const resp = await authAPI.getAuth();\r\n    if (resp.data.resultCode === 0) {\r\n        const {login, id, email} = resp.data.data;\r\n        dispatch(authActions.setUserData(id, email, login));\r\n        dispatch(authActions.setIsAuth(true));\r\n    }\r\n}\r\n\r\nexport const login = ({email, password, rememberMe}) => async (dispatch) => {\r\n    const resp = await authAPI.login(email, password, rememberMe)\r\n    if (resp.data.resultCode === 0) {\r\n        dispatch(getAuth())\r\n    } else {\r\n        const message = resp.data.messages[0].length > 0 ? resp.data.messages[0] : 'Some error';\r\n        const action = stopSubmit('login', {_error: message});\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const resp = await authAPI.logout();\r\n\r\n    if (resp.data.resultCode === 0) {\r\n        dispatch(authActions.setUserData(null, null, null));\r\n        dispatch(authActions.setIsAuth(false));\r\n    }\r\n}","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport * as authThunks from '../../redux/auth/authThunks'\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth,\r\n    userLogin:state.auth.login\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(authThunks,dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderContainer);\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n          <NavLink to = '/profile' activeClassName={s.active}>Profile</NavLink></div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n          <NavLink to = '/dialogs' activeClassName={s.active}>Messages</NavLink></div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to = '/users' activeClassName={s.active}>Users</NavLink></div>\r\n      <div className={s.item}>\r\n          <a>News</a></div>\r\n      <div className={s.item}>\r\n          <a>Music</a></div>\r\n        <div className={s.item}>\r\n            <a>Settings</a></div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export const addPost = (text) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        text:text\r\n    }\r\n}\r\nexport const setUserProfile = (profile) => {\r\n    return{\r\n        type:'SET_USER_PROFILE',\r\n        profile:profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type:'SET_STATUS',\r\n        status:status\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n        <div>\r\n            <div className={s.dialog}>\r\n                <img src='https://proprikol.ru/wp-content/uploads/2020/02/krasivye-kartinki-prosti-menya-1.jpg'  alt='picture not found'/>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n            <span>{props.likes} likes</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utills/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControlls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div><h3>My posts</h3></div>\r\n            <MyPostsReduxForm onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {props.posts.map(post => <Post key={post.key} message={post.message} likes={post.likes}/>)}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={TextArea} name={'newPostText'} placeholder={'PostMessage'}\r\n                    validate={[requiredField,maxLength10]}/>\r\n        </div>\r\n        <div><button>Add post</button></div>\r\n    </form>\r\n}\r\nconst MyPostsReduxForm = reduxForm({\r\n    form:'addPost'\r\n})(MyPostsForm);\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport * as profileActions from '../../../redux/profile/profileActions'\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newPostState:state.profilePage.newPostState\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(profileActions,dispatch)\r\n})\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({status:this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusEdit = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    startEditMode = (e) => {\r\n        this.setState({editMode:true})\r\n    }\r\n    endEditMode = (e) => {\r\n        this.setState({editMode:false})\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.editMode ? <div>\r\n                        <input onChange={this.onStatusEdit} autoFocus={true} onBlur={this.endEditMode} value={this.state.status}/>\r\n                    </div> :\r\n                    <div>\r\n                        <span onDoubleClick={this.startEditMode}>{this.props.status || '--------'}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const startEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const endEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusEdit = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? <div>\r\n                    <input onChange={onStatusEdit} autoFocus={true} value={status} onBlur={endEditMode} autoFocus={true}/>\r\n                </div> :\r\n                <div>\r\n                    <span onDoubleClick={startEditMode} >{props.status || '--------'}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile || !props.status){\r\n        return <div><Preloader/></div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.content}>\r\n                <img src=\"https://i.pinimg.com/originals/95/65/85/9565857812f9e868b197aa5f17b120a2.jpg\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                ava + description\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props}/>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;\r\n","import {profileAPI} from \"../../api/API\";\r\nimport * as profileActions from './profileActions'\r\n\r\nexport const getProfile = (userId) => {\r\n    return (dispatch) => {\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        profileAPI.getProfile(userId)\r\n            .then(resp => {\r\n                dispatch(profileActions.setUserProfile(resp.data))\r\n            });\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const resp = await profileAPI.getStatus(userId);\r\n    dispatch(profileActions.setStatus(resp.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const resp = await profileAPI.updateStatus(status)\r\n    if (resp.data.resultCode === 0) {\r\n        dispatch(profileActions.setStatus(status))\r\n    }\r\n}","import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport const withProfileRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.match.params.userId)\r\n                return <Redirect to={`/profile/${this.props.userId}`}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedProfileRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedProfileRedirectComponent;\r\n}","import * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as profileThunks from \"../../redux/profile/profileThunks\";\r\nimport {withAuthRedirect} from \"../../hocs/withAuthRedirect\";\r\nimport {withProfileRedirect} from \"../../hocs/withProfileRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getProfile(this.props.match.params.userId)\r\n        this.props.getStatus(this.props.match.params.userId)\r\n    }\r\n    render(){\r\n        return(\r\n            <Profile {...this.props}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    profile:state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(profileThunks,dispatch)\r\n})\r\n\r\nconst ProfileContainerComponent = compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    withProfileRedirect\r\n)(ProfileContainer)\r\n\r\nexport default ProfileContainerComponent;\r\n","import React, {useState} from \"react\";\r\nimport cn from 'classnames'\r\nimport s from './Paginator.module.css'\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, step = 4, bigStep = 10}) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const getLeftPageNumber = (someStep) => {\r\n        if (currentPage - someStep <= 0) return 1;\r\n        return currentPage - someStep;\r\n    }\r\n\r\n    const getRightPageNumber = (someStep) => {\r\n        if (currentPage + someStep > pagesCount) return pagesCount;\r\n        return currentPage + someStep;\r\n    }\r\n\r\n    const leftPageNumber = getLeftPageNumber(step);\r\n    const rightPageNumber = getRightPageNumber(step);\r\n    const leftPageNumberToButton = getLeftPageNumber(bigStep);\r\n    const rightPageNumberToButton = getRightPageNumber(bigStep);\r\n\r\n    return <div>\r\n        <button onClick={(e) => {onPageChanged(leftPageNumberToButton)}}>Prew</button>\r\n        {pages.filter(p => p >= leftPageNumber && p <= rightPageNumber)\r\n            .map(p => <span className={ cn({\r\n                [s.currentPage]: currentPage === p\r\n            }, s.page\r\n            )} key={p} onClick={(e) => {onPageChanged(p)\r\n            }}>{p}</span>)}\r\n        <button onClick={(e) => {onPageChanged(rightPageNumberToButton)}}>Next</button>\r\n    </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport s from './Users.module.css'\r\nimport img from \"../common/img/userIcon.png\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n            <Paginator {...props}/>\r\n            {props.isFetching ?  <Preloader/>:\r\n                props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small} className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.unfollow(u.id)}>Unfollow</button> :\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                </div>\r\n            </span>\r\n                    <span>\r\n                <span>\r\n                <div>\r\n                    {u.name}\r\n                </div>\r\n                <div>\r\n                    {u.status}\r\n                </div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.country\"}</div>\r\n                    <div>{\"u.city\"}</div>\r\n                </span>\r\n            </span>\r\n                </div>)}\r\n        </div>\r\n        }\r\n\r\n        export default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,getIsFetching, (users,isFetching) =>{\r\n    return users.filter(u => true);\r\n    })\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as userThunks from '../../redux/users/usersThunks'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.onPageChanged(pageNumber,this.props.pageSize)\r\n    }\r\n\r\n    follow = (userId) => {\r\n        this.props.follow(userId)\r\n    }\r\n    unfollow = (userId) => {\r\n        this.props.unfollow(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users {...this.props} onPageChanged={this.onPageChanged} follow={this.follow} unfollow={this.unfollow}/>\r\n        )\r\n    }\r\n};\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        isFetching: state.usersPage.isFetching,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        isFetching: getIsFetching(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(userThunks, dispatch)\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../utills/validators/validators\";\r\nimport {Input} from \"../common/FormsControlls/FormsControls\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './Login.module.css'\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'email'} name={'email'} component={Input}\r\n                   validate={[requiredField, maxLength30]}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder={'Password'} name={'password'} component={Input} type={'password'}\r\n                   validate={[requiredField, maxLength30]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} type={'checkbox'} name={'rememberMe'}/> remember me\r\n        </div>\r\n        {props.error &&\r\n        <div className={s.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <div>\r\n            <button type={'submit'}>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport * as authThunks from '../../redux/auth/authThunks'\r\nimport {bindActionCreators} from \"redux\";\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(authThunks,dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\r\n","import {getAuth} from \"../auth/authThunks\";\r\nimport {initializedSuccess} from \"./appActions\";\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        const authPrommise = dispatch(getAuth());\r\n        Promise.all([authPrommise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n        })\r\n}","export const initializedSuccess = () => {\r\n    return {\r\n        type: 'SET_INITIALIZED',\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from \"./components/Profile/ProfileContainer\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport Users from \"./components/Users/UsersContainer\";\nimport LoginPage from './components/Login/LoginContainer'\nimport {bindActionCreators, compose} from \"redux\";\nimport * as appThunks from \"./redux/app/appThunks\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withLazyLoading} from \"./hocs/withLazyLoading\";\nconst Dialogs = withLazyLoading(React.lazy( () => import(\"./components/Dialogs/DialogsContainer\")));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if(!this.props.initialized) {return <Preloader/>}\n        return (\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs' render={() =>\n                        <Dialogs/>}/> {/*component={Dialogs}*/}\n                    <Route path='/profile/:userId?' render={() =>\n                        <Profile/>}/>\n                    <Route path='/users' render={() =>\n                        <Users/>}/>\n                    <Route path='/login' render={() =>\n                        <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    initialized: store.app.initialized\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    ...bindActionCreators(appThunks,dispatch)\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps,mapDispatchToProps))(App);\n","const initialState ={\r\n        posts: [\r\n    {message: 'Hi, how are you', likes: '1', key: 1},\r\n    {message: 'It\\'s my first post', likes: '21', key: 2},\r\n    {message: 'Random message', likes: '14', key: 3},\r\n    {message: 'Some another message', likes: '10', key: 4}\r\n],\r\n    profile:null,\r\n    status:null\r\n}\r\n\r\nconst profileReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_PROFILE':{\r\n            return {...state,profile:action.profile}\r\n        };\r\n        case 'ADD-POST': {\r\n            const newPost = {\r\n                message: action.text,\r\n                likes: 0,\r\n                key: 6\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.push(newPost);\r\n            stateCopy.newPostState = '';\r\n            return stateCopy;\r\n        }\r\n        case 'SET_STATUS': {\r\n            return {...state, status:action.status}\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport default profileReducer;","const initialState = {\r\nmessages: [\r\n{message: 'Hi friend!'},\r\n{message: 'How are you?'},\r\n{message: 'I will be glad to see yoo!'}\r\n],\r\ndialogs: [\r\n{id: 1, name: 'Dima'},\r\n{id: 2, name: 'Bohdan'},\r\n{id: 3, name: 'Tanya'},\r\n{id: 4, name: 'Ighor'}\r\n]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE':\r\n        {\r\n            const messageBody = {\r\n                message:action.message\r\n            };\r\n            return {\r\n            ...state,\r\n            messages:[...state.messages,messageBody]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport default dialogsReducer;","const initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n    isReady:false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA': {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case 'SET_IS_AUTH': {\r\n            return {...state, isAuth:action.isAuth}\r\n        }\r\n        case 'SET_IS_READY': {\r\n            return {...state, isReady:action.isReady}\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import img from '../../components/common/img/userIcon.png'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FOLLOW': {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) return {...u, followed: true}\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case 'UNFOLLOW': {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) return {...u, followed: false}\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case 'SET_USERS': {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.newPage}\r\n        }\r\n        case 'SET_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SET_FOLLOWING_IN_PROGRESS':{\r\n            return {...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] :\r\n                    [...state.followingInProgress.filter(id => id != action.userId )]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default usersReducer;","const initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED' : {\r\n            return {...state, initialized: true}\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile/profileReducer\";\r\nimport dialogsReducer from \"./dialogs/dialogsReducer\";\r\nimport authReducer from \"./auth/authReducer\";\r\nimport logger from 'redux-logger';\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport thunk from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app/appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    app:appReducer,\r\n    auth:authReducer,\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    usersPage:usersReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk,logger));\r\n\r\nexport default store;","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/reduxStore\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport s from './FormsControls.module.css';\r\n\r\nconst FormControll = ({input,meta,...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n            <div>{props.children}</div>\r\n            {hasError && <span>\"{meta.error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input,meta,child,...restProps} = props;\r\n    return (\r\n        <FormControll {...props}><textarea {...input} {...restProps}/></FormControll>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,child,...restProps} = props;\r\n    return (\r\n        <FormControll {...props}><input {...input} {...restProps}/></FormControll>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Swfl\",\"loginBlock\":\"Header_loginBlock__sF_aP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kM1z\",\"posts\":\"MyPosts_posts__1Cfbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3s-fj\",\"error\":\"FormsControls_error__2pDUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1_2Uj\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1pbBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Paginator_page__26CoP\",\"currentPage\":\"Paginator_currentPage__3cegb\"};"],"sourceRoot":""}
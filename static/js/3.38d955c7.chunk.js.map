{"version":3,"sources":["components/Dialogs/Dialogs.module.css","redux/dialogs/dialogsActions.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","updateNewMessageBody","text","type","newText","sendMessage","message","DialogItem","props","className","s","dialog","to","id","name","Message","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","requiredField","component","TextArea","Dialogs","dialogs","messagesElements","messages","map","post","dialogsItems","user","key","values","newMessageBody","DialogsContainer","compose","connect","state","dialogsPage","dispatch","bindActionCreators","DialogsActions","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,oLCDvMC,EAAuB,SAACC,GACjC,MAAM,CACFC,KAAK,0BACLC,QAASF,IAIJG,EAAc,SAACC,GACxB,MAAO,CACHH,KAAM,eACNG,QAAQA,I,4DCHVC,EAAa,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QAKlDC,EAAU,SAACP,GACb,OACI,yBAAKC,UAAWC,IAAEJ,SAAUE,EAAMF,UA2BpCU,EAAcC,YAAiB,IAe/BC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAbL,SAACX,GACjB,OAAO,0BAAMa,SAAUb,EAAMc,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,wBAAyBV,KAAM,iBAC5CW,SAAU,CAACC,IAAcV,GACzBW,UAAWC,OAEtB,6BACI,6CASGC,EAzCC,SAACrB,GACb,IAIOsB,EAAqBtB,EAArBsB,QACDC,EADsBvB,EAAZwB,SAEHC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAK5B,aAChD,OACI,yBAAKG,UAAWC,IAAEoB,SACd,yBAAKrB,UAAWC,IAAEyB,cACbL,EAAQG,KAAI,SAAAG,GAAI,OACb,kBAAC,EAAD,CAAYtB,KAAMsB,EAAKtB,KAAMD,GAAIuB,EAAKvB,GAAIwB,IAAKD,EAAKvB,SAE5D,yBAAKJ,UAAWC,IAAEsB,UACbD,EACL,kBAACb,EAAD,CAAkBG,SAfN,SAACiB,GACdA,EAAOC,gBAAgB/B,EAAMH,YAAYiC,EAAOC,sB,uBCLrDC,G,OAAmBC,YACrBC,aAZoB,SAACC,GACrB,MAAO,CACHb,QAAQa,EAAMC,YAAYd,QAC1BE,SAASW,EAAMC,YAAYZ,aAIR,SAACa,GAAD,sBACpBC,YAAmBC,EAAgBF,OAKtCG,IAFqBP,CAGvBZ,IAEaW","file":"static/js/3.38d955c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__b1N7f\",\"dialogsItems\":\"Dialogs_dialogsItems__CeHvv\",\"dialog\":\"Dialogs_dialog__3Ho-p\",\"messages\":\"Dialogs_messages__2kiA4\",\"message\":\"Dialogs_message__2yFzY\",\"active\":\"Dialogs_active__3hDFk\"};","export const updateNewMessageBody = (text) => {\r\n    return{\r\n        type:'UPDATE-NEW-MESSAGE-BODY',\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message) => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n        message:message\r\n    }\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControlls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utills/validators/validators\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const sendMessage = (values) => {\r\n        if(values.newMessageBody) props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    const {dialogs, messages} = props;\r\n    const messagesElements =\r\n        messages.map(post => <Message message={post.message}/>);\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogs.map(user =>\r\n                    <DialogItem name={user.name} id={user.id} key={user.id}/>)}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            <DialogsReduxForm onSubmit={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Enter your message...'} name={'newMessageBody'}\r\n                   validate={[requiredField,maxLength50]}\r\n                   component={TextArea}/>\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n    form: 'dialogs'\r\n})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport * as DialogsActions from '../../redux/dialogs/dialogsActions';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hocs/withAuthRedirect\";\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport * as userThunks from \"../../redux/users/usersThunks\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs:state.dialogsPage.dialogs,\r\n        messages:state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    ...bindActionCreators(DialogsActions, dispatch)\r\n});\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}